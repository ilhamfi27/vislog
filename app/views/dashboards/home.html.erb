 <% content_for :navbar do %>
      <%= render 'shared/navbar' %>
 <% end %>

<% content_for :body_class, "hold-transition skin-blue sidebar-mini" %>

<div class="content-wrapper">
  <section class="content-header">
    <div class="row">
      <div class="col-md-6">
        <div class="box-shadow-1 padding-all-10">
          <h2 class="color-light-blue text-align-left">Data Searching</h2>
          <%= search_form_for @search, url: dashboards_path, method: :get do |f| %>
            <div class="form-group">
              <label class="control-label">
                Category
              </label>
              <div class="">
                <select name="cols[]" id="dates-field2" multiple="multiple" class="multiselect-ui form-control">
                  <option value="channel_id_in">channel</option>
                  <option value="program_cont">program</option>
                  <option value="level_1_cont">level_1</option>
                  <option value="level_2_cont">level_2</option>
                  <option value="cost_eq">cost</option>
                </select>
              </div>
            </div>
            <div class="form-group">
              <label>Search Keyword :</label>
              <input type="text" name="keyword" class="form-control">
            </div>
            <div class="form-group">
              <label>Date Range :</label>
              <div class="input-group" style="margin-top: 10px;;">
                <div class="input-group-addon">
                  <i class="fa fa-calendar"></i>
                </div>
                <input type="text" name="date" class="form-control pull-right" id="reservation">
              </div>
            </div>
            <input type="submit" name="" value="Proceed" 
            class="btn btn-default btn-dasar f-bg-dark-blue color-white">
          <% end %>
        </div>
      </div>
    </div>
  </section>
</div>
<footer class="main-footer">
  <div class="pull-right hidden-xs">
    <b>Version</b> 1.0
  </div>
  <strong>
    Copyright &copy; 2017
    <a href="https://adminlte.io">Cipta Global Integral</a>.
  </strong> All rights reserved.
</footer>
<div style="clear: both"></div>
<% content_for :javascript_in_file do %>
  <script type="text/javascript">
    $(function(){
      $('#reservation').daterangepicker(
        {
            locale: {
              format: 'DD-MM-YYYY'
            }
        }
      );

      $('.multiselect-ui').multiselect({
          includeSelectAllOption: true
        });
        
      var areaChartData = {
        labels  : ['TRANS7', 'RCTI', 'SCTV', 'TRANS TV', 'GTV', 'TVM', 'MNC TV', 'ANTV'],
            datasets: [
              {
                label               : 'Channel',
                fillColor           : 'rgba(60,141,188,0.9)',
                strokeColor         : 'rgba(60,141,188,0.8)',
                pointColor          : '#3b8bba',
                pointStrokeColor    : 'rgba(60,141,188,1)',
                pointHighlightFill  : '#fff',
                pointHighlightStroke: 'rgba(60,141,188,1)',
                data                : [1200, 1700, 1500, 1300, 1100, 1400, 1300, 1000]
              }
          ]
        }
      var barChartCanvas                   = $('#barChart').get(0).getContext('2d');
        var barChart                         = new Chart(barChartCanvas);
        var barChartData                     = areaChartData;
        barChartData.datasets[0].fillColor   = '#4A89DC';
        barChartData.datasets[0].strokeColor = '#4A89DC';
        barChartData.datasets[0].pointColor  = '#4A89DC';
        var barChartOptions                  = {
          //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
          scaleBeginAtZero        : true,
          //Boolean - Whether grid lines are shown across the chart
          scaleShowGridLines      : true,
          //String - Colour of the grid lines
          scaleGridLineColor      : 'rgba(0,0,0,.05)',
          //Number - Width of the grid lines
          scaleGridLineWidth      : 1,
          //Boolean - Whether to show horizontal lines (except X axis)
          scaleShowHorizontalLines: true,
          //Boolean - Whether to show vertical lines (except Y axis)
          scaleShowVerticalLines  : true,
          //Boolean - If there is a stroke on each bar
          barShowStroke           : true,
          //Number - Pixel width of the bar stroke
          barStrokeWidth          : 2,
          //Number - Spacing between each of the X value sets
          barValueSpacing         : 5,
          //Number - Spacing between data sets within X values
          barDatasetSpacing       : 1,
          //Boolean - whether to make the chart responsive
          responsive              : true,
          maintainAspectRatio     : true
        };

        barChartOptions.datasetFill = false;
        barChart.Bar(barChartData, barChartOptions);
        var table = $('#example').DataTable({
          'ajax': 'https://api.myjson.com/bins/1us28',  
          'columnDefs': [{
             'targets': 0,
             'searchable':false,
             'orderable':false,
             'className': 'dt-body-center',
             'render': function (data, type, full, meta){
                 return '<input type="checkbox" name="id[]" value="' 
                    + $('<div/>').text(data).html() + '">';
             }
          }],
          'order': [1, 'asc'],
          'paging'      : true,
          'lengthChange': false,
          'searching'   : true,
          'ordering'    : true,
          'info'        : true,
          'autoWidth'   : false
       });

       // Handle click on "Select all" control
       $('#example-select-all').on('click', function(){
          // Check/uncheck all checkboxes in the table
          var rows = table.rows({ 'search': 'applied' }).nodes();
          $('input[type="checkbox"]', rows).prop('checked', this.checked);
       });

       // Handle click on checkbox to set state of "Select all" control
       $('#example tbody').on('change', 'input[type="checkbox"]', function(){
          // If checkbox is not checked
          if(!this.checked){
             var el = $('#example-select-all').get(0);
             // If "Select all" control is checked and has 'indeterminate' property
             if(el && el.checked && ('indeterminate' in el)){
                // Set visual state of "Select all" control 
                // as 'indeterminate'
                el.indeterminate = true;
             }
          }
       });
        
       $('#frm-example').on('submit', function(e){
          var form = this;

          // Iterate over all checkboxes in the table
          table.$('input[type="checkbox"]').each(function(){
             // If checkbox doesn't exist in DOM
             if(!$.contains(document, this)){
                // If checkbox is checked
                if(this.checked){
                   // Create a hidden element 
                   $(form).append(
                      $('<input>')
                         .attr('type', 'hidden')
                         .attr('name', this.name)
                         .val(this.value)
                   );
                }
             } 
          });

          // FOR TESTING ONLY
          
          // Output form data to a console
          $('#example-console').text($(form).serialize()); 
          console.log("Form submission", $(form).serialize()); 
           
          // Prevent actual form submission
          e.preventDefault();
       });
    });
  </script>
<% end %>